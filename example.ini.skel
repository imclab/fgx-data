#
# fgx - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#


[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost


## Set the MpServer
# The multiplayer server to connect via telnet
telnet_server = 217.150.241.103
telnet_admin_port = 5001

temp_dir = /home/map/_TEMP

## The location of the static server url
static_server_url = http://static.fgx.ch


##========================
## The cf-geoff > Geoff crossfeed server from udp to http
## This is the ajax corrected with heading etc 
## and snapshot from current state/postion from fgms.0.x


# Current - This return the raw data
crossfeed_ajax_url = http://cf.fgx.ch:80/data 
# crossfeed_ajax_url = http://127.0.0.1:3335/data

## The maximum no of mpserverNN to lookup for now, this might be dynamic later
max_dns_no = 50

[server:main]

## Http Server
use = egg:Paste#http
host = 0.0.0.0
port = 6789



[app:main]
use = egg:fgx
full_stack = true
static_files = true

cache_dir = %(here)s/data
beaker.session.key = fgx
beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.datsa_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

##=======================================
# SQLAlchemy database URL's
# These are the three database connection', but could be the same user/pass and database

## Data - Postgis required for geomoetry
sql_navdata.url = postgresql+psycopg2://USER:PASSWORD@localhost/DATABASE

## Users and Profiles, settings storage etc
sql_users.url =  postgresql+psycopg2://USER:PASSWORD@localhost/DATABASE


## Multiplayer and tracker
sql_mpnet.url =  postgresql+psycopg2://USER:PASSWORD@localhost/DATABASE


##=======================================



# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false


# Logging configuration
[loggers]
keys = root, routes, fgx, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_routes]
level = INFO
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_fgx]
level = DEBUG
handlers =
qualname = fgx

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] [%(threadName)s] %(message)s
datefmt = %H:%M:%S
